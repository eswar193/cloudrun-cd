steps:
  # pull the container image if it is already built
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'docker pull gcr.io/$PROJECT_ID/appcicd:latest || exit 0'
  # build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/appcicd:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/appcicd:$COMMIT_SHA'
      - '--cache-from'
      - 'gcr.io/$PROJECT_ID/appcicd:latest'
      - '.'
  # push the container image to Container Registry with all tags
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/appcicd'
  # deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'appml'
      - '--image'
      - 'gcr.io/$PROJECT_ID/appcicd:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
  # deploy Sonarcube
  - name: 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
    args:
      - '-Dsonar.host.url=https://sonarcloud.io'
      - '-Dsonar.login=eswarsaikumar'
      - '-Dsonar.projectKey=23f2db65b126a9d33dcd99f0084e551fb89d50ba'
      - '-Dsonar.organization=eswarsaikumar'
      - '-Dsonar.sources=.'
    tags: ['cloud-builders-community']
  # deploy Sonarcube image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '--build-arg'
      - 'SONARQUBE_SCANNER_CLI_VERSION=4.6.0.2311'
      - '-t'
      - 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/sonar-scanner:4.6.0.2311'
      - '.'

    images: 
      - 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
      - 'gcr.io/$PROJECT_ID/sonar-scanner:4.6.0.2311'

    tags: ['cloud-builders-community']
